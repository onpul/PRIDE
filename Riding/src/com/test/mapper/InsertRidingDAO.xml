<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ○ mapper 엘리먼트의 『namespace="패키지 경로가 포함된 인터페이스"』 -->
<!--    - 인터페이스 내부에 메소드명이 선언되어 있어야 한다. -->
<!--    - 이 메소드 명과 『id="식별자"』가 일치해야 한다. -->
<mapper namespace="com.test.riding.IInsertRidingDAO">
	<insert id = "insertRiding" parameterType="com.test.riding.InsertRidingDTO">
		
		<selectKey keyProperty="riding_id,created_date" resultType="com.test.riding.InsertRidingDTO" order="AFTER">
            SELECT RIDING_ID, CREATED_DATE
			FROM
			(
			    SELECT RIDING_ID, CREATED_DATE, ROW_NUMBER() OVER(ORDER BY CREATED_DATE DESC) DATE_NUM
			    FROM RIDING
			    WHERE LEADER_ID = #{user_id}
			)
			WHERE DATE_NUM = 1
        </selectKey>
	    
		INSERT INTO RIDING ( RIDING_ID, LEADER_ID, STEP_ID
			, SPEED_ID, MOOD_P_ID, DINING_P_ID, EAT_P_ID
			, AGE_P_ID, SEX_P_ID, EV_GRADE_ID, RIDING_NAME, START_DATE
			, END_DATE, CREATED_DATE, MAXIMUM, MEET_LATI
			, MEET_LONGI, MEET_ADDRESS, MEET_DETAIL
			, START_LATI, START_LONGI, START_ADDRESS
			, START_DETAIL, END_LATI, END_LONGI
			, END_ADDRESS, END_DETAIL, CONFIRM_DATE, COMMENTS)
		VALUES (SEQ_RIDING.NEXTVAL, #{user_id}, #{step_id}
			, #{speed_id}, #{mood_p_id}, #{dining_p_id}, #{eat_p_id}
			, #{age_p_id}, #{sex_p_id}, #{ev_grede_id}, #{riding_name}, TO_DATE('${start_date}', 'YYYY-MM-DD HH24:MI')
			, TO_DATE('${end_date}', 'YYYY-MM-DD HH24:MI'), SYSDATE, #{maximum}, #{meet_lati}
			, #{meet_longi}, #{meet_address}, #{meet_detail}
			, #{start_lati}, #{start_longi}, #{start_address}
			, #{start_detail}, #{end_lati}, #{end_longi}
			, #{end_address}, #{end_detail}, NULL, #{comments})
		
		
	</insert>
	
	<insert id="insertRidingPoint">
		INSERT INTO RIDING_POINT (POINT_ID, RIDING_ID, LATITUDE
				      		   , LONGITUDE, ADDRESS, DETAIL_ADDRESS)
		VALUES (SEQ_RIDING_POINT.NEXTVAL, #{riding_id}, #{latitude}
			 , #{longitude}, #{address}, #{detail_address})
	</insert>
	
	<delete id="deleteRidingPoint">
		DELETE RIDING_POINT
		WHERE RIDING_ID=#{riding_id}
	</delete>
	
	<insert id="insertParticipatedMember">
		INSERT INTO PARTICIPATED_MEMBER (PA_MEMBER_ID, USER_ID, RIDING_ID, PARTICI_DATE)
		VALUES (SEQ_PARTICIPATED_MEMBER.NEXTVAL, #{user_id}, #{riding_id}, TO_DATE(#{created_date}, 'yyyy-mm-dd hh24:mi:ss'))
	</insert>
	
	<update id="updateRiding">
		UPDATE RIDING
		SET STEP_ID=#{step_id}, SPEED_ID = #{speed_id}, MOOD_P_ID = #{mood_p_id}, DINING_P_ID = #{dining_p_id}
		  , EAT_P_ID=#{eat_p_id}, AGE_P_ID=#{age_p_id}, SEX_P_ID=#{sex_p_id}, EV_GRADE_ID=#{ev_grade_id}, RIDING_NAME=#{riding_name}
		  , START_DATE=TO_DATE(#{start_date}, 'YYYY-MM-DD HH24:MI')
		  , END_DATE=TO_DATE(#{end_date}, 'YYYY-MM-DD HH24:MI')
		  , MAXIMUM=#{maximum}, MEET_LATI = #{meet_lati}, MEET_LONGI=#{meet_longi}, MEET_ADDRESS=#{meet_address}, MEET_DETAIL=#{meet_detail}
		  , START_LATI=#{start_lati}, START_LONGI=#{start_longi}, START_ADDRESS=#{start_address}, START_DETAIL =#{start_detail}
		  , END_LATI=#{end_lati}, END_LONGI=#{end_longi}, END_ADDRESS=#{end_address}, END_DETAIL=#{end_detail}
		  , COMMENTS=#{comments}
		WHERE RIDING_ID=#{riding_id}
	</update>
	
	<resultMap type="Map" id="preferMap">
		<id column="SEX" property="sex"/>
		<id column="AGE_P_ID" property="age_p_id"/>
	</resultMap>
	
	<select id="preference" resultMap="preferMap">
		SELECT SEX
		     , TO_CHAR(CASE WHEN ROUND((SYSDATE - BIRTHDAY)/365) >= 60
		            THEN 6
		            WHEN ROUND((SYSDATE - BIRTHDAY)/365) >= 50
		            THEN 5
		            WHEN ROUND((SYSDATE - BIRTHDAY)/365) >= 40
		            THEN 4
		            WHEN ROUND((SYSDATE - BIRTHDAY)/365) >= 30
		            THEN 3
		            WHEN ROUND((SYSDATE - BIRTHDAY)/365) >= 20
		            THEN 2
		            WHEN ROUND((SYSDATE - BIRTHDAY)/365) >= 10
		            THEN 1
		            ELSE 0
		       END) "AGE_P_ID"
		FROM PROFILE
		WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 모임 삭제하기 -->
	<insert id="deleteRiding">
		INSERT INTO DELETED_RIDING
		VALUES(SEQ_DEL_RIDING.NEXTVAL, #{riding_id}, SYSDATE)
	</insert>
	
	<!-- 모임 나가기 -->
	<!-- 우선 확정 신경 안 쓰고 참여자 리스트에서 딜리트만 -->
	<delete id="exitRiding">
		DELETE
		FROM PARTICIPATED_MEMBER
		WHERE RIDING_ID = #{riding_id}
		AND USER_ID = #{user_id}
	</delete>
	
	<!-- 모임 확정 -->
	<update id="confirmRiding">
		UPDATE RIDING
		SET CONFIRM_DATE = ${confirm}
		WHERE RIDING_ID = #{riding_id}
	</update>
</mapper>
